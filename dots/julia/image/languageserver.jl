precompile(Tuple{typeof(Base.atreplinit), Function})
precompile(Tuple{typeof(FilePathsBase.__init__)})
precompile(Tuple{typeof(Parsers.__init__)})
precompile(Tuple{typeof(Base.Threads.resize_nthreads!), Array{Base.MPFR.BigFloat, 1}, Base.MPFR.BigFloat})
precompile(Tuple{typeof(Base.Threads.resize_nthreads!), Array{Base.GMP.BigInt, 1}, Base.GMP.BigInt})
precompile(Tuple{typeof(Base.require), Module, Symbol})
precompile(Tuple{typeof(Base._compute_eltype), Type{Tuple{Base.Pair{String, String}, Base.Pair{String, String}, Base.Pair{String, LanguageServer.WorkDoneProgressCreateParams}, Base.Pair{String, String}}}})
precompile(Tuple{typeof(Base._compute_eltype), Type{Tuple{Base.Pair{String, String}, Base.Pair{String, String}, Base.Pair{String, LanguageServer.ProgressParams{LanguageServer.WorkDoneProgressBegin}}}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{CSTParser.EXPR}})
precompile(Tuple{typeof(Base.allocatedinline), Type{LanguageServer.Diagnostic}})
precompile(Tuple{typeof(Base._compute_eltype), Type{Tuple{Base.Pair{String, String}, Base.Pair{String, String}, Base.Pair{String, LanguageServer.PublishDiagnosticsParams}}}})
precompile(Tuple{typeof(LanguageServer.runserver)})
precompile(Tuple{typeof(Base.something), Nothing, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Base.something), String, String})
precompile(Tuple{typeof(LanguageServer.runserver), Base.TTY, Base.TTY, String, String, Nothing, Nothing})
precompile(Tuple{typeof(Base.deepcopy_internal), Any, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.deepcopy_internal), Symbol, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.deepcopy_internal), Base.Dict{Symbol, Any}, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.deepcopy_internal), Array{Symbol, 1}, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.similar), Array{Symbol, 1}})
precompile(Tuple{typeof(Base.deepcopy_internal), Array{SymbolServer.MethodStore, 1}, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.similar), Array{SymbolServer.MethodStore, 1}})
precompile(Tuple{typeof(Base.length), Array{SymbolServer.MethodStore, 1}})
precompile(Tuple{typeof(Base.deepcopy_internal), Array{Base.Pair{Any, Any}, 1}, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.similar), Array{Base.Pair{Any, Any}, 1}})
precompile(Tuple{typeof(Base.length), Array{Base.Pair{Any, Any}, 1}})
precompile(Tuple{typeof(Base.deepcopy_internal), Array{Any, 1}, Base.IdDict{Any, Any}})
precompile(Tuple{typeof(Base.similar), Array{Any, 1}})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Any}, SymbolServer.FunctionStore, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Any}, SymbolServer.DataTypeStore, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Any}, SymbolServer.VarRef, Symbol})
precompile(Tuple{typeof(Base.setindex!), Base.Dict{Symbol, Any}, SymbolServer.GenericStore, Symbol})
precompile(Tuple{typeof(Base.getproperty), SymbolServer.FunctionStore, Symbol})
precompile(Tuple{typeof(Base.haskey), Base.Dict{SymbolServer.VarRef, Array{SymbolServer.VarRef, 1}}, SymbolServer.VarRef})
precompile(Tuple{typeof(Base.getproperty), SymbolServer.VarRef, Symbol})
precompile(Tuple{typeof(Base.setindex!), Array{SymbolServer.VarRef, 1}, SymbolServer.VarRef, Int64})
precompile(Tuple{typeof(Base.getindex), Base.Dict{SymbolServer.VarRef, Array{SymbolServer.VarRef, 1}}, SymbolServer.VarRef})
precompile(Tuple{typeof(Base.run), JSONRPC.JSONRPCEndpoint{Base.TTY, Base.TTY}})
precompile(Tuple{JSONRPC.var"#1#3"{JSONRPC.JSONRPCEndpoint{Base.TTY, Base.TTY}}})
precompile(Tuple{typeof(Base.typeintersect), Any, Any})
precompile(Tuple{JSONRPC.var"#2#4"{JSONRPC.JSONRPCEndpoint{Base.TTY, Base.TTY}}})
precompile(Tuple{typeof(Base.allocatedinline), Type{Base.Process}})
precompile(Tuple{typeof(Base._compute_eltype), Type{Tuple{Base.Pair{String, String}, Base.Pair{String, String}, Base.Pair{String, LanguageServer.ProgressParams{LanguageServer.WorkDoneProgressEnd}}}}})
precompile(Tuple{LanguageServer.var"#93#95"{LanguageServer.LanguageServerInstance}})
precompile(Tuple{LanguageServer.var"#97#129"{LanguageServer.LanguageServerInstance}})
precompile(Tuple{LanguageServer.var"#98#130"{LanguageServer.LanguageServerInstance}})
precompile(Tuple{typeof(Base._compute_eltype), Type{Tuple{Base.Pair{String, String}, Base.Pair{String, String}, Base.Pair{String, LanguageServer.ProgressParams{LanguageServer.WorkDoneProgressReport}}}}})
precompile(Tuple{SymbolServer.var"#41#42"{LanguageServer.var"#94#96"{LanguageServer.LanguageServerInstance}, Nothing, String, Base.Channel{Any}}})
precompile(Tuple{typeof(Base.cmd_gen), Tuple{Tuple{String}, Tuple{Base.SubString{String}, String}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}}, Tuple{Base.SubString{String}, String}, Tuple{String}, Tuple{String}, Tuple{String}}})
precompile(Tuple{typeof(Base.setup_stdio), Base.GenericIOBuffer{Array{UInt8, 1}}, Bool})
precompile(Tuple{typeof(Base.cconvert), Type{Ptr{Base.Cstring}}, Array{String, 1}})
precompile(Tuple{typeof(Base.convert), Type{IO}, Base.PipeEndpoint})
precompile(Tuple{typeof(Base.setproperty!), SymbolServer.SymbolServerInstance, Symbol, Base.Process})
precompile(Tuple{typeof(Base.convert), Type{Union{Nothing, Base.Process}}, Base.Process})
precompile(Tuple{Base.var"#589#590"{Base.PipeEndpoint, Base.GenericIOBuffer{Array{UInt8, 1}}, Base.PipeEndpoint}})
precompile(Tuple{Type{Base.Dict{Symbol, SymbolServer.ModuleStore}}, Base.Generator{Base.Dict{Symbol, SymbolServer.ModuleStore}, typeof(SymbolServer.recursive_copy)}})
precompile(Tuple{typeof(SymbolServer.recursive_copy), SymbolServer.FunctionStore})
precompile(Tuple{typeof(SymbolServer.recursive_copy), Symbol})
precompile(Tuple{typeof(SymbolServer.recursive_copy), SymbolServer.FakeUnionAll})
precompile(Tuple{typeof(SymbolServer.recursive_copy), SymbolServer.FakeTypeName})
precompile(Tuple{typeof(SymbolServer.recursive_copy), SymbolServer.FakeUnion})
precompile(Tuple{typeof(SymbolServer.recursive_copy), SymbolServer.DataTypeStore})
precompile(Tuple{typeof(SymbolServer.recursive_copy), SymbolServer.GenericStore})
precompile(Tuple{typeof(SymbolServer.recursive_copy), SymbolServer.ModuleStore})
precompile(Tuple{typeof(SymbolServer.recursive_copy), Int64})
precompile(Tuple{typeof(Base.uvfinalize), Sockets.PipeServer})
precompile(Tuple{typeof(SymbolServer.recursive_copy), Bool})
precompile(Tuple{typeof(Base.push!), Base.Channel{Any}, Base.Dict{Symbol, SymbolServer.ModuleStore}})
precompile(Tuple{Type{NamedTuple{(:type, :msg), T} where T<:Tuple}, Tuple{Symbol, Base.Dict{Symbol, SymbolServer.ModuleStore}}})
precompile(Tuple{typeof(Base.put!), Base.Channel{Any}, NamedTuple{(:type, :msg), Tuple{Symbol, Base.Dict{Symbol, SymbolServer.ModuleStore}}}})
precompile(Tuple{typeof(Base.getproperty), NamedTuple{(:type, :msg), Tuple{Symbol, Base.Dict{Symbol, SymbolServer.ModuleStore}}}, Symbol})
precompile(Tuple{typeof(Base.CoreLogging.shouldlog), Logging.ConsoleLogger, Base.CoreLogging.LogLevel, Module, Symbol, Symbol})
precompile(Tuple{typeof(Logging.default_metafmt), Base.CoreLogging.LogLevel, Module, Symbol, Symbol, String, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Symbol, String, String}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{Symbol, String, String}, Int64, Int64})
precompile(Tuple{Type{Base.IOContext{IO_t} where IO_t<:IO}, Base.GenericIOBuffer{Array{UInt8, 1}}, Base.TTY})
precompile(Tuple{typeof(Base.afoldl), typeof(Base.:(+)), Int64, Int64, Int64})
precompile(Tuple{Base.var"#printstyled##kw", NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}, typeof(Base.printstyled), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String})
precompile(Tuple{Base.var"#printstyled##kw", NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}, typeof(Base.printstyled), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Vararg{String, N} where N})
precompile(Tuple{Base.var"##printstyled#746", Bool, Symbol, typeof(Base.printstyled), Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Vararg{String, N} where N})
precompile(Tuple{Base.var"#with_output_color##kw", NamedTuple{(:bold,), Tuple{Bool}}, typeof(Base.with_output_color), Function, Symbol, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Vararg{String, N} where N})
precompile(Tuple{Base.var"##with_output_color#745", Bool, typeof(Base.with_output_color), Function, Symbol, Base.IOContext{Base.GenericIOBuffer{Array{UInt8, 1}}}, String, Vararg{String, N} where N})
precompile(Tuple{typeof(Base.write), Base.TTY, Array{UInt8, 1}})
precompile(Tuple{typeof(Base.setproperty!), LanguageServer.LanguageServerInstance, Symbol, Base.Dict{Symbol, SymbolServer.ModuleStore}})
precompile(Tuple{typeof(Base.convert), Type{Base.Dict{Symbol, SymbolServer.ModuleStore}}, Base.Dict{Symbol, SymbolServer.ModuleStore}})
precompile(Tuple{typeof(Base.display_error), Array{Any, 1}})
precompile(Tuple{typeof(Base.display_error), Base.TTY, Array{Any, 1}})
precompile(Tuple{Base.var"#printstyled##kw", NamedTuple{(:bold, :color), Tuple{Bool, Symbol}}, typeof(Base.printstyled), Base.TTY, String})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{InterruptException, Array{Base.StackTraces.StackFrame, 1}}, Int64})
precompile(Tuple{typeof(Base.indexed_iterate), Tuple{InterruptException, Array{Base.StackTraces.StackFrame, 1}}, Int64, Int64})
precompile(Tuple{Base.var"#showerror##kw", NamedTuple{(:backtrace,), Tuple{Bool}}, typeof(Base.showerror), Base.IOContext{Base.TTY}, InterruptException, Array{Base.StackTraces.StackFrame, 1}})
precompile(Tuple{typeof(Base.Filesystem.temp_cleanup_purge)})
